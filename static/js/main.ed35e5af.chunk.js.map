{"version":3,"sources":["CalculatorService.js","Calculator.js","index.js"],"names":["calculate","input","validateFormat","evaluate","replaceAll","textExp","indexOf","calculateSimpleExpression","firstCloseExp","priorOpenExp","substring","lastIndexOf","innerExp","result","successFlag","value","regex","testString","test","simpleExp","search","num1","num2","op","begin","end","i","length","charAt","Number","replaceString","replaceValue","operator","val1","val2","performOperation","replace","Calculator","props","event","preventDefault","state","mathStr","setState","errorMessage","message","changeMathStr","target","bind","ErrorPanel","this","id","className","onChange","rows","cols","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed35e5af.chunk.js","sourcesContent":["export function calculate(input) {\n    var allowedCharacters = /^[\\d+*\\-%/()\\. ]+$/g\n    if (!validateFormat(allowedCharacters, input)) {\n        return {'successFlag' : false, 'message': 'Invalid Input.'}\n    }\n    return evaluate(input.replaceAll(' ', ''))\n}\n\nfunction evaluate (textExp) {\n    var innerExpCheck = textExp.indexOf('(')\n    if (innerExpCheck === -1) {\n       var acceptedFormat = /^[+-]?((\\.\\d+)|\\d+(\\.\\d+)?)\\s?([+*%\\-/]\\s?[+-]?((\\.\\d+)|\\d+(\\.\\d+)?)\\s?)*$/g\n        if (!validateFormat(acceptedFormat, textExp)) {\n            return {'successFlag' : false, 'message': 'Syntax Error.'}\n        }\n        //To-Do implementation\n        return calculateSimpleExpression(textExp)\n    } else {\n        var firstCloseExp = textExp.indexOf(')')\n        if (firstCloseExp === -1) {\n            return {'successFlag' : false, 'message': 'Syntax Error.'}\n        }\n        var priorOpenExp = textExp.substring(0, firstCloseExp).lastIndexOf('(')\n        var innerExp = textExp.substring(priorOpenExp+1, firstCloseExp)\n        var result = evaluate(innerExp);\n        if (result.successFlag) {\n            textExp = textExp.replaceAll('('+innerExp+')', result.value)\n            return evaluate(textExp)\n        } else {\n            return result;\n        }\n    }\n}\n\nfunction validateFormat (regex, testString) {\n    return regex.test(testString);\n}\n\nfunction calculateSimpleExpression (simpleExp) {\n    if (simpleExp.substring(1).search(/[*/%+\\-]/) === -1) {\n        return {'successFlag' : true, 'value': simpleExp}\n    }\n    var op = -1\n    var begin = 0\n    var end = -1\n    var num1 = 0\n    var num2 = 0\n    var p1 = simpleExp.search(/[*/%]/)\n    if (p1 === -1) {\n        for (var i=1; i <simpleExp.length;i++) {\n            if (simpleExp.charAt(i) === '+' || simpleExp.charAt(i) === '-') {\n                op = i;\n                break;\n            }\n        }\n    } else {\n        op = simpleExp.search(/[*/%]/)\n        for (var i=op-1; i >=0;i--) {\n            if (simpleExp.charAt(i) === '+' || simpleExp.charAt(i) === '-') {\n                if (i == 0 || (simpleExp.charAt(i-1) === '+' || simpleExp.charAt(i-1) === '-')) {\n                    begin = i\n                } else {\n                    begin = i+1\n                }\n            break;\n            }\n        }\n    }\n    num1 = Number(simpleExp.substring(begin, op))\n    for (var i=op+2; i < simpleExp.length; i++) {\n        if (simpleExp.charAt(i) === '+' || simpleExp.charAt(i) === '-' || simpleExp.charAt(i) === '*'\n            || simpleExp.charAt(i) === '%' || simpleExp.charAt(i) === '/') {\n            end = i;\n            break;\n        }\n    }\n    if (end === -1) {\n        end = simpleExp.length\n    }\n    num2 = Number(simpleExp.substring(op+1, end))\n    var replaceString = simpleExp.substring(begin,end)\n    var replaceValue = performOperation(simpleExp.substring(op, op+1), num1, num2)\n    simpleExp = simpleExp.replace(replaceString, replaceValue)\n    return calculateSimpleExpression(simpleExp)\n}\n\nfunction performOperation (operator, val1, val2) {\n    if (operator === '+') {\n        return Number(val1) + Number(val2)\n    } else if (operator === '-') {\n        return Number(val1) - Number(val2)\n    } else if (operator === '*') {\n        return Number(val1) * Number(val2)\n    } else if (operator === '%') {\n        return Number(val1) % Number(val2)\n    } else if (operator === '/') {\n        return Number(val1) / Number(val2)\n    }\n}","import React, {Component} from 'react';\nimport './Calculator.css';\nimport {calculate} from './CalculatorService';\n\nclass Calculator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mathStr : '',\n            result : '',\n            errorMessage : ''\n        };\n        this.calculate = this.calculate.bind(this);\n        this.changeMathStr = this.changeMathStr.bind(this);\n    }\n    \n    calculate = (event) => {\n        event.preventDefault();\n        var result = calculate(this.state.mathStr);\n        if (result.successFlag) {\n            this.setState({\n                result : result.value,\n                errorMessage : ''\n            })\n        } else {\n            this.setState({\n                result : '',\n                errorMessage : result.message\n            })\n        }\n    }\n    changeMathStr = (event) => {\n        this.setState({\n            mathStr : event.target.value,\n            result : 0\n        })\n    }\n    \n    render() {\n        let ErrorPanel = null;\n        if (this.state.errorMessage) {\n            ErrorPanel = (\n                <div id=\"errorPanelDiv\">\n                    <ul>\n                        <li>{this.state.errorMessage} Please Try again.</li>\n                    </ul>\n                </div>\n            );\n        }\n        return (\n            <div className=\"maindiv\">\n                <form id=\"calculatorForm\">\n                    <header>\n                        <h1 id=\"calcTitle\">Calculator - VidMob Exercise</h1>\n                    </header>\n                    <div>\n                        <p className=\"calcDesrciption\">Enter math string and click on Calculate button. Ex: \"1 + 2\", \"(4-2)*3.5\" etc </p>\n                        {ErrorPanel}\n                        <div className=\"innerDiv\">\n                            <label id=\"mathStrLabel\">Enter Problem : </label>\n                            <textarea onChange={this.changeMathStr} value={this.state.mathStr} rows=\"5\" cols=\"45\"/>\n                        </div>\n                        <button id=\"mathStrButton\" onClick={this.calculate}>Calculate</button>\n                        <div>\n                            <p id=\"resultElem\">Result is : {this.state.result}</p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\nexport default Calculator;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}